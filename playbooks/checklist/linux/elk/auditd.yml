#- hosts: elkservers
#  remote_user: ubuntu
#  tasks:
- name: Read ELK password file
  shell: "cat /home/ubuntu/docker-elk/.env | grep ELASTIC_PASSWORD | cut -d \"'\" -f 2"
  register: elastic_password
  when: inventory_hostname in groups['elkservers']

- name: Make new Linux policy in Fleet
  shell: "curl -u elastic:{{ elastic_password.stdout }} --request POST --url localhost:5601/api/fleet/agent_policies?sys_monitoring=true --header 'content-type: application/json' --header 'kbn-xsrf: true' --data '{\"name\": \"Linux policy\", \"description\": \"\", \"namespace\": \"default\", \"monitoring_enabled\": [\"logs\", \"metrics\"],\"id\":\"linux-policy\"}'"
  when: inventory_hostname in groups['elkservers']

- name: Add Auditd to new Linux policy
  shell: "curl -u elastic:{{ elastic_password.stdout }} --request POST --url localhost:5601/api/fleet/package_policies --header 'content-type: application/json' --header 'kbn-xsrf: true' --data '{\"policy_id\": \"linux-policy\", \"package\": {\"name\": \"auditd\", \"version\": \"3.4.1\"}, \"name\": \"auditd-1\", \"description\": \"\", \"namespace\": \"default\", \"inputs\": {\"auditd-logfile\": {\"enabled\": true, \"streams\": {\"auditd.log\": {\"enabled\": true, \"vars\": {\"paths\": [\"/var/log/audit/audit.log*\"], \"tags\": [\"auditd-log\"], \"preserve_original_event\": false}}}}}}'"
  when: inventory_hostname in groups['elkservers']
